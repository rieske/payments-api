buildscript {
    ext {
        springCloudVersion = 'Finchley.M9'
        lombokVersion = '1.16.20'
        pactVersion = '3.5.14'
        jerseyVersion = '2.26'
        jacksonVersion = '2.9.5'
        cucumberVersoin = '2.4.0'
        snippetsDir = file("${buildDir}/generated-snippets")
    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.0.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.6'
}


mainClassName = 'lt.rieske.payments.PaymentsApiApp'

sourceCompatibility = 9

bootJar {
    archiveName = 'payments-api.jar'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url 'https://dl.bintray.com/palantir/releases' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    consumerContractTest {
        java.srcDir file('src/consumer-contract-test/java')
        resources.srcDir file('src/consumer-contract-test/resources')
    }
    componentTest {
        java.srcDir file('src/component-test/java')
        resources.srcDir file('src/component-test/resources')
    }
}

configurations {
    consumerContractTest
    componentTest
    apt
}

task consumerContractTest(type: Test) {
    // let's pretend those come from and are executed somewhere else by our consumer
    description = 'Consumer Driven Contract tests'
    testClassesDirs = sourceSets.consumerContractTest.output.classesDirs
    classpath = sourceSets.consumerContractTest.runtimeClasspath
    systemProperties['pact.rootDir'] = "$buildDir/pacts"
}

task componentTest(type: Test) {
    description = 'Component tests'
    testClassesDirs = sourceSets.componentTest.output.classesDirs
    classpath = sourceSets.componentTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

asciidoctor {
    dependsOn test
    outputDir = file('build/docs')
    backends = ['html5']
    sourceDir 'src/main/asciidoc'
    attributes \
      'snippets': snippetsDir,
      'toclevels': 5
}

dependencies {
    apt "org.projectlombok:lombok:${lombokVersion}"

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.1.RELEASE"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.data:spring-data-rest-webmvc'
    compile 'org.springframework.data:spring-data-rest-hal-browser'

    compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
    compile 'org.springframework.cloud:spring-cloud-starter-zipkin'

    compile 'io.micrometer:micrometer-registry-graphite:1.0.1'
    compile 'net.logstash.logback:logstash-logback-encoder:5.0'
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    compile 'org.apache.commons:commons-lang3:3.6'

    compile 'org.postgresql:postgresql:42.2.2'
    compile 'org.flywaydb:flyway-core'

    testCompile 'javax.xml.bind:jaxb-api:2.3.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile "au.com.dius:pact-jvm-provider-spring_2.12:${pactVersion}"
    testCompile 'commons-io:commons-io:2.6'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile 'com.h2database:h2'

    testCompile "io.cucumber:cucumber-java8:${cucumberVersoin}"
    testCompile "io.cucumber:cucumber-junit:${cucumberVersoin}"
    testCompile "io.cucumber:cucumber-spring:${cucumberVersoin}"

    consumerContractTestCompile "au.com.dius:pact-jvm-consumer-junit_2.12:${pactVersion}"
    consumerContractTestCompile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
    consumerContractTestCompile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    consumerContractTestCompile "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    consumerContractTestCompile "org.glassfish.jersey.connectors:jersey-apache-connector:${jerseyVersion}"
    consumerContractTestCompile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    consumerContractTestCompile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"
    consumerContractTestCompile 'org.assertj:assertj-core:3.9.0'
    consumerContractTestCompile 'org.slf4j:slf4j-log4j12:1.7.25'
    consumerContractTestCompile 'commons-io:commons-io:2.6'
    consumerContractTestCompile 'javax.xml.bind:jaxb-api:2.3.0'

    componentTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:0.33.0'
    componentTestCompile 'io.rest-assured:rest-assured:3.0.7'
    componentTestCompile 'org.slf4j:slf4j-log4j12:1.7.25'
    componentTestCompile 'commons-logging:commons-logging:1.2'
    componentTestCompile 'commons-io:commons-io:2.6'
}

test.dependsOn(consumerContractTest)
componentTest.dependsOn(jar)
build.dependsOn(componentTest)

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
